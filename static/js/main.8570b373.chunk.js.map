{"version":3,"sources":["types/SortType.ts","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["SortType","TodoFilter","searchQuery","handleSearchQueryChange","resetSearchQuery","sortType","setSortType","className","value","onChange","event","target","all","active","completed","type","placeholder","style","pointerEvents","onClick","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","selectedTodo","handleSelectedTodo","useState","user","setUser","useEffect","userId","userFromServer","id","title","href","email","name","TodoList","todos","setSelectedTodo","map","todo","classNames","App","setTodos","setSearchQuery","setTodosFromServer","a","todosFromServer","Error","filteredAndSortedTodos","useMemo","filter","filteredBySearchQuery","toLowerCase","includes","useCallback","reset","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8570b373.chunk.js","sourcesContent":["export enum SortType {\n  all = 'all',\n  completed = 'completed',\n  active = 'active',\n}\n","import { SortType } from '../../types/SortType';\n\ntype Props = {\n  searchQuery: string;\n  handleSearchQueryChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  resetSearchQuery: () => void;\n  sortType: string;\n  setSortType: (value: SortType) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  searchQuery,\n  handleSearchQueryChange,\n  resetSearchQuery,\n  sortType,\n  setSortType,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            value={sortType}\n            onChange={(event) => setSortType(event.target.value as SortType)}\n            data-cy=\"statusSelect\"\n          >\n            <option value={SortType.all}>All</option>\n            <option value={SortType.active}>Active</option>\n            <option value={SortType.completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          className=\"input\"\n          value={searchQuery}\n          onChange={handleSearchQueryChange}\n          data-cy=\"searchInput\"\n          type=\"text\"\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {searchQuery && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              className=\"delete\"\n              onClick={resetSearchQuery}\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectedTodo: Todo;\n  handleSelectedTodo: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  handleSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(selectedTodo.userId)\n      .then(userFromServer => setUser(userFromServer));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user || !selectedTodo ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              type=\"button\"\n              onClick={handleSelectedTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              { ' by ' }\n              <a href={`mailto:${user.email}`}>{ user.name }</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  setSelectedTodo: (value: Todo | null) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n          className={classNames({\n            'has-background-info-light': selectedTodo?.id === todo.id,\n          })}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={classNames({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => {\n                setSelectedTodo(todo);\n              }}\n            >\n              <span className=\"icon\">\n                <i\n                  className={classNames('far', {\n                    'fa-eye': selectedTodo?.id !== todo.id,\n                    'fa-eye-slash': selectedTodo?.id === todo.id,\n                  })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React, {\n  useEffect, useMemo, useState, useCallback,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { TodoList } from './components/TodoList';\nimport { getTodos } from './api';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { SortType } from './types/SortType';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [sortType, setSortType] = useState<SortType>(SortType.all);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    const setTodosFromServer = async () => {\n      try {\n        const todosFromServer = await getTodos();\n\n        setTodos(todosFromServer);\n      } catch (error) {\n        throw new Error('error');\n      }\n    };\n\n    setTodosFromServer();\n  }, []);\n\n  const filteredAndSortedTodos = useMemo(() => {\n    return todos.filter(todo => {\n      const filteredBySearchQuery = todo.title\n        .toLowerCase()\n        .includes(searchQuery.toLowerCase());\n\n      switch (sortType) {\n        case SortType.active:\n          return !todo.completed && filteredBySearchQuery;\n\n        case SortType.completed:\n          return todo.completed && filteredBySearchQuery;\n\n        case SortType.all:\n        default:\n          return filteredBySearchQuery;\n      }\n    });\n  }, [sortType, todos, searchQuery]);\n\n  const handleSearchQueryChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      setSearchQuery(event.target.value);\n    },\n    [],\n  );\n\n  const reset = useCallback(() => {\n    setSearchQuery('');\n  }, []);\n\n  const handleSelectedTodo = useCallback(() => {\n    setSelectedTodo(null);\n  }, [selectedTodo]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n            <div className=\"block\">\n              <TodoFilter\n                searchQuery={searchQuery}\n                handleSearchQueryChange={handleSearchQueryChange}\n                resetSearchQuery={reset}\n                sortType={sortType}\n                setSortType={setSortType}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={filteredAndSortedTodos}\n                  selectedTodo={selectedTodo}\n                  setSelectedTodo={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          handleSelectedTodo={handleSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}